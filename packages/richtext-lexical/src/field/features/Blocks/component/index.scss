@import 'payload/scss';

.ContentEditable__root > div:has(.lexical-block) {
  // Fixes a bug where, if the block field has a Select field, the Select field's dropdown menu would be hidden behind the lexical editor.
  z-index: 1;
}

.lexical-block {
  display: flex;
  flex-direction: column;
  gap: calc(var(--base) / 2);
  font-family: var(
    --font-body
  ); // Reset font to non-serif, body font, as the lexical editor parent uses a serif font.

  margin: 0 0 1.5em;

  &__header {
    h3 {
      margin: 0;
    }
  }

  &__header-wrap {
    display: flex;
    align-items: flex-end;
    width: 100%;
    justify-content: space-between;
  }

  &__heading-with-error {
    display: flex;
    align-items: center;
    gap: base(0.5);
  }

  &--has-no-error {
    > .array-field__header .array-field__heading-with-error {
      color: var(--theme-text);
    }
  }

  &--has-error {
    > .array-field__header {
      color: var(--theme-error-500);
    }
  }

  &__error-pill {
    align-self: center;
  }

  &__header-actions {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
  }

  &__header-action {
    @extend %btn-reset;
    cursor: pointer;
    margin-left: base(0.5);

    &:hover,
    &:focus-visible {
      text-decoration: underline;
    }
  }

  .collapsible {
    &__header-wrap {
      //  Make more space for the block header (default right: is base(3)) so that the remove button aligns nicely to the right
      right: base(1.5);
    }
  }

  &__removeButton.btn {
    margin: 0;
  }

  &__block-header {
    pointer-events: none;
  }

  &__block-header * {
    pointer-events: all;
  }

  &__block-header,
  &__block-header > div {
    display: flex;
    max-width: 100%;
    overflow: hidden;
    gap: base(0.375);
    justify-content: space-between;
  }

  &__block-number {
    flex-shrink: 0;
  }

  &__block-pill {
    flex-shrink: 0;
    display: block;
    line-height: unset;
  }

  &__error-wrap {
    position: relative;
  }

  &__rows {
    display: flex;
    flex-direction: column;
    gap: calc(var(--base) / 2);
  }

  &__drawer-toggler {
    background-color: transparent;
    margin: 0;
    padding: 0;
    border: none;
    align-self: flex-start;

    .btn {
      color: var(--theme-elevation-400);
      margin: 0;

      &:hover {
        color: var(--theme-elevation-800);
      }
    }
  }
}

html[data-theme='light'] {
  .blocks-field--has-error {
    .section-title__input,
    .blocks-field__heading-with-error {
      color: var(--theme-error-750);
    }
  }
}

html[data-theme='dark'] {
  .blocks-field--has-error {
    .section-title__input,
    .blocks-field__heading-with-error {
      color: var(--theme-error-500);
    }
  }
}
