/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    media: Media;
    posts: Post;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'payload-mcp-endpoint': PayloadMcpEndpoint;
    'payload-mcp-tools': PayloadMcpTool;
  };
  globalsSelect: {
    'payload-mcp-endpoint': PayloadMcpEndpointSelect<false> | PayloadMcpEndpointSelect<true>;
    'payload-mcp-tools': PayloadMcpToolsSelect<false> | PayloadMcpToolsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title?: string | null;
  content?: string | null;
  author?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  author?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-mcp-endpoint".
 */
export interface PayloadMcpEndpoint {
  id: string;
  serverInfo?: {
    /**
     * The name of the MCP server.
     */
    name?: string | null;
    /**
     * The version of the MCP server.
     */
    version?: string | null;
  };
  /**
   * The base path for the MCP server. This is set automatically by the plugin.
   */
  basePath?: string | null;
  /**
   * The maximum transaction duration.
   */
  maxDuration?: number | null;
  /**
   * Enable verbose logs.
   */
  verboseLogs?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-mcp-tools".
 */
export interface PayloadMcpTool {
  id: string;
  resources?: {
    /**
     * Find documents in a Collection.
     */
    find?: boolean | null;
    /**
     * Create documents in a Collection.
     */
    create?: boolean | null;
    /**
     * Update documents in a Collection.
     */
    update?: boolean | null;
    /**
     * Delete documents from a Collection.
     */
    delete?: boolean | null;
  };
  custom?: {
    /**
     * Rolls a virtual dice with a specified number of sides
     */
    diceRoll?: boolean | null;
  };
  collections?: {
    /**
     * Find and list Payload collections with optional content and document counts.
     */
    find?: boolean | null;
    /**
     * Create new Payload collections with specified fields and configuration.
     */
    create?: boolean | null;
    /**
     * Update existing Payload collections with new fields, modifications, or configuration changes.
     */
    update?: boolean | null;
    /**
     * Delete Payload collections and optionally update the configuration.
     */
    delete?: boolean | null;
  };
  jobs?: {
    /**
     * Create new Payload jobs (tasks and workflows) with custom schemas and configuration.
     */
    create?: boolean | null;
    /**
     * Execute Payload jobs with custom input data and queue options.
     */
    run?: boolean | null;
    /**
     * Update existing Payload jobs with new schemas, configuration, or handler code.
     */
    update?: boolean | null;
  };
  config?: {
    /**
     * Read and display a Payload configuration file.
     */
    find?: boolean | null;
    /**
     * Update a Payload configuration file with various modifications.
     */
    update?: boolean | null;
  };
  auth?: {
    /**
     * Check authentication status for a user by setting custom headers. (e.g. {"Authorization": "Bearer <token>"})
     */
    auth?: boolean | null;
    /**
     * Authenticate a user with email and password.
     */
    login?: boolean | null;
    /**
     * Verify a user email with a verification token.
     */
    verify?: boolean | null;
    /**
     * Reset a user password with a reset token.
     */
    resetPassword?: boolean | null;
    /**
     * Send a password reset email to a user.
     */
    forgotPassword?: boolean | null;
    /**
     * Unlock a user account that has been locked due to failed login attempts.
     */
    unlock?: boolean | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-mcp-endpoint_select".
 */
export interface PayloadMcpEndpointSelect<T extends boolean = true> {
  serverInfo?:
    | T
    | {
        name?: T;
        version?: T;
      };
  basePath?: T;
  maxDuration?: T;
  verboseLogs?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-mcp-tools_select".
 */
export interface PayloadMcpToolsSelect<T extends boolean = true> {
  resources?:
    | T
    | {
        find?: T;
        create?: T;
        update?: T;
        delete?: T;
      };
  custom?:
    | T
    | {
        diceRoll?: T;
      };
  collections?:
    | T
    | {
        find?: T;
        create?: T;
        update?: T;
        delete?: T;
      };
  jobs?:
    | T
    | {
        create?: T;
        run?: T;
        update?: T;
      };
  config?:
    | T
    | {
        find?: T;
        update?: T;
      };
  auth?:
    | T
    | {
        auth?: T;
        login?: T;
        verify?: T;
        resetPassword?: T;
        forgotPassword?: T;
        unlock?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  // @ts-ignore 
  export interface GeneratedTypes extends Config {}
}